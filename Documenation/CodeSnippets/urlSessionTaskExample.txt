- (void) asyncJSON
{
    NSString* uri =  @"https://raw.githubusercontent.com/m1a7/DemoJSONsForNetworkLayer/master/infoAboutCompany.json";
    
    // Create the URLSession on the default configuration
    NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];
    configuration.timeoutIntervalForRequest  = 5;
    configuration.timeoutIntervalForResource = 1000;
    configuration.URLCredentialStorage = [NSURLCredentialStorage sharedCredentialStorage];
    configuration.discretionary        = YES;
    if (@available(macOS 10.13.1, iOS 11, *)) {
        configuration.waitsForConnectivity = YES;
    }
    NSURLSession *defaultSession = [NSURLSession sessionWithConfiguration:configuration];
    
    NSURL *url = [NSURL URLWithString:uri];
    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url];
    [request setHTTPMethod:@"GET"];
    [request addValue:@"application/json" forHTTPHeaderField:@"Content-Type"];
    [request addValue:@"application/json" forHTTPHeaderField:@"Accept"];
    
    // Create dataTask
    NSURLSessionDataTask *dataTask = [defaultSession dataTaskWithRequest:request
                                                       completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
        // Handle your response here
        NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *)response;
        if(httpResponse.statusCode == 200)
        {
            NSError *parseError = nil;
            NSDictionary *responseDictionary = [NSJSONSerialization JSONObjectWithData:data options:0 error:&parseError];
            NSLog(@"JSON - %@",responseDictionary);
        }
        else{
            NSLog(@"Error");
        }
    }];
    
    // Fire the request
    [dataTask resume];
}


- (void) syncJSON
{
     NSURL *url = [NSURL URLWithString:@"https://raw.githubusercontent.com/m1a7/DemoJSONsForNetworkLayer/master/infoAboutCompany.json"];

    __block NSData * data = nil;
    dispatch_semaphore_t semaphore = dispatch_semaphore_create(0);

    // Configurate session
    NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];
    configuration.timeoutIntervalForRequest  = 5;
    configuration.timeoutIntervalForResource = 1000;
    configuration.requestCachePolicy   = NSURLRequestReloadIgnoringLocalCacheData;
    configuration.URLCredentialStorage = [NSURLCredentialStorage sharedCredentialStorage];
    configuration.discretionary        = YES;
    if (@available(macOS 10.13.1, iOS 11, *)) {
        configuration.waitsForConnectivity = YES;
    }
    NSURLSession *defaultSession = [NSURLSession sessionWithConfiguration:configuration];
    
    // Build URL Request
    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url];
    [request setHTTPMethod:@"GET"];
    [request addValue:@"application/json" forHTTPHeaderField:@"Content-Type"];
    [request addValue:@"application/json" forHTTPHeaderField:@"Accept"];
    
    NSURLSessionDataTask *task = [defaultSession dataTaskWithRequest:request
                                                   completionHandler:^(NSData*         _Nullable taskData,
                                                                       NSURLResponse*  _Nullable response,
                                                                       NSError*        _Nullable error) {
        data = taskData;
        dispatch_semaphore_signal(semaphore);
    }];
    [task resume];
    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);
    
    // Parsing
    NSError *parseError = nil;
    NSDictionary *responseDictionary = [NSJSONSerialization JSONObjectWithData:data options:0 error:&parseError];
}